PVector sizer=new PVector(600,600);
float[][] test_inputs= {{0.25,0.25},{0.5,0.25},{0.75,0.5},{0.5,0.5}};
float[][] inputs= {{0.0,0.0},{0.0,1.0},{1.0,0.0},{1.0,1.0},{0.5,0.5},{0.25,0.75},{0.75,0.75},{0.25,1.0},{1.0,0.75},{0.0,0.25},{0.25,0.5},{0.5,0.0}};
float[][] outputs= {{1.0},{0.0},{0.0},{1.0},{1.0},{0.0},{1.0},{0.0},{0.0},{0.0},{0.0},{0.0}};
Generation vaclavs=new Generation(50,new int[]{2,8,4,1});
Network vaclav;
PrintWriter gen_log;

public void settings()
{
  size(int(sizer.x),int(sizer.y));
}

void setup()
{
 //vaclavs.full_teach(30,10000,0.01,inputs,outputs);
 //vaclav=vaclavs.best();
 vaclav=new Network(new int[]{2,8,4,1},new float[][]{{4.444022,-6.349752,1.0938464,1.1394607,2.2443814,3.9345596,2.961234,-7.6916018,-3.8650105,7.7152023,0.57266533,-0.3679551,-2.6778767,-3.1471252,-0.8266539,9.501691},{-0.08061126,2.7699327,0.4704788,-6.513884,0.27640468,-2.355223,-1.7508016,1.4898947,0.3453304,-1.4251761,-1.1055613,-3.1178272,0.615336,-2.8478634,-1.7435721,2.2571592,-0.28410873,0.76859283,-2.1170826,6.6424055,0.61192316,2.6139634,1.8338083,-6.9060483,-0.2655074,0.38045412,-1.2047044,-3.8508213,0.8998011,-3.4204586,-1.7307726,1.9867027},{-0.015112244,-2.3361773,8.020645E-4,-2.3348587}},new float[]{0.00,-0.25289735,-2.2267988,-0.013661754});
}

void draw()
{
 background(255);
 vaclav.show();
 vaclav.show_biasses();
}

void mousePressed()
{
  test(vaclav,test_inputs);
}